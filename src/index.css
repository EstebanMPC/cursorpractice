* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f5f0e6;
  color: #000000;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.App {
  min-height: 100vh;
  background-color: #f5f0e6;
  background-image: url('./assets/wave.png');
  background-repeat: repeat;
  background-size: calc(50px + 8vw);
  background-attachment: fixed;
  position: relative;
  overflow-x: hidden;
}

.navbar {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem 2rem;
  height: 80px;
  background-color: transparent;
  position: fixed;
  width: 100%;
  top: 0;
  z-index: 10;
}

.navbar-rose {
  width: 60px;
  height: 60px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.rose-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  filter: brightness(0) saturate(100%);
}

.main-content {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding-top: 80px;
  position: relative;
  width: 100%;
}

.bird-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.bird-image {
  width: 200px;
  height: 200px;
  object-fit: contain;
  z-index: 1;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: fadeIn 1s ease-out forwards;
  opacity: 0;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Styles for when the bird is in the navbar */
.bird-image.navbar-bird {
  width: 60px;
  height: 60px;
  position: fixed;
  top: 1em;
  left: 1em;
  z-index: 11;
  transform-origin: center center;
}

/* Adjust main content when bird is in navbar */
.main-content.navbar-bird {
  padding-top: 0;
  transition: padding-top 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:wght@400;500;600&display=swap');

.title-text {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: 'EB Garamond', serif;
  font-weight: 500;
  color: #000000;
  opacity: 0;
  text-align: center;
  width: calc(100vw - 4em);
  font-size: min(10vw, 8rem);
  line-height: 1.1;
  letter-spacing: 0.05em;
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.title-text.fade-in {
  opacity: 1;
  transform: translate(-50%, -60%);
}

.title-text div {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  margin: 0;
  padding: 0;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.title-text.fade-in div {
  opacity: 1;
  transform: translateY(0);
}

.title-text div:first-child {
  transition-delay: 0.2s;
}

.title-text div:last-child {
  transition-delay: 0.4s;
}

/* Add new keyframes for exiting left */
@keyframes exitLeft {
  from {
    opacity: 1;
    transform: translate(-50%, -60%);
  }
  to {
    opacity: 0;
    /* Move significantly left, using vw ensures it's fully off-screen */
    transform: translate(calc(-50% - 100vw), -60%);
  }
}

/* Add a new class to trigger the exit animation */
.title-text.exit-left {
  /* Apply the animation */
  /* Adjust duration (1.5s) and timing function (ease-in) as needed */
  animation: exitLeft 1.5s ease-in forwards;
  /* The delay before this animation starts needs to be handled in JavaScript */
  /* For example, add this class using setTimeout after the fade-in completes */
}

